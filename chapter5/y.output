State 2 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | %empty

    4 dec: tydecs
    5    | vardec
    6    | fundecs

    7 tydecs: tydec
    8       | tydec tydecs

    9 tydec: TYPE ID EQ ty

   10 ty: ID
   11   | LBRACE tyfields RBRACE
   12   | ARRAY OF ID

   13 tyfield: ID COLON ID

   14 tyfields: tyfield
   15         | tyfield COMMA tyfields
   16         | %empty

   17 vardec: VAR ID ASSIGN exp
   18       | VAR ID COLON ID ASSIGN exp

   19 fundecs: fundec
   20        | fundec fundecs

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   23 exp: NIL
   24    | lvalue
   25    | INT
   26    | STRING
   27    | MINUS exp
   28    | exp PLUS exp
   29    | exp MINUS exp
   30    | exp TIMES exp
   31    | exp DIVIDE exp
   32    | exp GE exp
   33    | exp LE exp
   34    | exp EQ exp
   35    | exp NEQ exp
   36    | exp GT exp
   37    | exp LT exp
   38    | exp AND exp
   39    | exp OR exp
   40    | ID LBRACE RBRACE
   41    | ID LBRACE ass RBRACE
   42    | ID LBRACK exp RBRACK OF exp
   43    | lvalue ASSIGN exp
   44    | IF exp THEN exp ELSE exp
   45    | IF exp THEN exp
   46    | WHILE exp DO exp
   47    | FOR ID ASSIGN exp TO exp DO exp
   48    | BREAK
   49    | LET decs IN explist END
   50    | LPAREN explist RPAREN
   51    | funcall
   52    | LPAREN error RPAREN

   53 lvalue: ID
   54       | lvalue DOT ID
   55       | lvalue LBRACK exp RBRACK
   56       | ID LBRACK exp RBRACK

   57 explist: exp
   58        | exp SEMICOLON explist
   59        | %empty
   60        | error SEMICOLON exp

   61 funcall: ID LPAREN RPAREN
   62        | ID LPAREN paramlist RPAREN

   63 paramlist: exp
   64          | exp COMMA paramlist

   65 ass: ID EQ exp
   66    | ID EQ exp COMMA ass


Terminals, with rules where they appear

$end (0) 0
error (256) 52 60
SEMICOLON (258) 58 60
THEN (259) 44 45
ELSE (260) 44
DOT (261) 54
DO (262) 46 47
OF (263) 12 42
ASSIGN (264) 17 18 43 47
OR (265) 39
AND (266) 38
EQ (267) 9 21 22 34 65 66
NEQ (268) 35
LT (269) 37
LE (270) 33
GT (271) 36
GE (272) 32
PLUS (273) 28
MINUS (274) 27 29
TIMES (275) 30
DIVIDE (276) 31
UMINUS (277)
ID (278) 9 10 12 13 17 18 21 22 40 41 42 47 53 54 56 61 62 65 66
STRING (279) 26
INT (280) 25
COMMA (281) 15 64 66
COLON (282) 13 18 22
LPAREN (283) 21 22 50 52 61 62
RPAREN (284) 21 22 50 52 61 62
LBRACK (285) 42 55 56
RBRACK (286) 42 55 56
LBRACE (287) 11 40 41
RBRACE (288) 11 40 41
ARRAY (289) 12
IF (290) 44 45
WHILE (291) 46
FOR (292) 47
TO (293) 47
LET (294) 49
IN (295) 49
END (296) 49
BREAK (297) 48
NIL (298) 23
FUNCTION (299) 21 22
VAR (300) 17 18
TYPE (301) 9


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 2 49
dec (50)
    on left: 4 5 6, on right: 2
tydecs (51)
    on left: 7 8, on right: 4 8
tydec (52)
    on left: 9, on right: 7 8
ty (53)
    on left: 10 11 12, on right: 9
tyfield (54)
    on left: 13, on right: 14 15
tyfields (55)
    on left: 14 15 16, on right: 11 15 21 22
vardec (56)
    on left: 17 18, on right: 5
fundecs (57)
    on left: 19 20, on right: 6 20
fundec (58)
    on left: 21 22, on right: 19 20
exp (59)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 48 49 50 51 52, on right: 1 17 18 21 22 27
    28 29 30 31 32 33 34 35 36 37 38 39 42 43 44 45 46 47 55 56 57
    58 60 63 64 65 66
lvalue (60)
    on left: 53 54 55 56, on right: 24 43 54 55
explist (61)
    on left: 57 58 59 60, on right: 49 50 58
funcall (62)
    on left: 61 62, on right: 51
paramlist (63)
    on left: 63 64, on right: 62 64
ass (64)
    on left: 65 66, on right: 41 66


State 0

    0 $accept: . program $end

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14
    funcall  go to state 15


State 1

   27 exp: MINUS . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 16
    lvalue   go to state 14
    funcall  go to state 15


State 2

   40 exp: ID . LBRACE RBRACE
   41    | ID . LBRACE ass RBRACE
   42    | ID . LBRACK exp RBRACK OF exp
   53 lvalue: ID .
   56       | ID . LBRACK exp RBRACK
   61 funcall: ID . LPAREN RPAREN
   62        | ID . LPAREN paramlist RPAREN

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19

    LBRACK    [reduce using rule 53 (lvalue)]
    $default  reduce using rule 53 (lvalue)


State 3

   26 exp: STRING .

    $default  reduce using rule 26 (exp)


State 4

   25 exp: INT .

    $default  reduce using rule 25 (exp)


State 5

   50 exp: LPAREN . explist RPAREN
   52    | LPAREN . error RPAREN

    error   shift, and go to state 20
    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    RPAREN  reduce using rule 59 (explist)

    exp      go to state 21
    lvalue   go to state 14
    explist  go to state 22
    funcall  go to state 15


State 6

   44 exp: IF . exp THEN exp ELSE exp
   45    | IF . exp THEN exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    lvalue   go to state 14
    funcall  go to state 15


State 7

   46 exp: WHILE . exp DO exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    lvalue   go to state 14
    funcall  go to state 15


State 8

   47 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


State 9

   49 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 3 (decs)

    decs     go to state 29
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


State 10

   48 exp: BREAK .

    $default  reduce using rule 48 (exp)


State 11

   23 exp: NIL .

    $default  reduce using rule 23 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 36


State 13

    1 program: exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 1 (program)


State 14

   24 exp: lvalue .
   43    | lvalue . ASSIGN exp
   54 lvalue: lvalue . DOT ID
   55       | lvalue . LBRACK exp RBRACK

    DOT     shift, and go to state 49
    ASSIGN  shift, and go to state 50
    LBRACK  shift, and go to state 51

    $default  reduce using rule 24 (exp)


State 15

   51 exp: funcall .

    $default  reduce using rule 51 (exp)


State 16

   27 exp: MINUS exp .
   28    | exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 27 (exp)


State 17

   61 funcall: ID LPAREN . RPAREN
   62        | ID LPAREN . paramlist RPAREN

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 52
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 53
    lvalue     go to state 14
    funcall    go to state 15
    paramlist  go to state 54


State 18

   42 exp: ID LBRACK . exp RBRACK OF exp
   56 lvalue: ID LBRACK . exp RBRACK

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 55
    lvalue   go to state 14
    funcall  go to state 15


State 19

   40 exp: ID LBRACE . RBRACE
   41    | ID LBRACE . ass RBRACE

    ID      shift, and go to state 56
    RBRACE  shift, and go to state 57

    ass  go to state 58


State 20

   52 exp: LPAREN error . RPAREN
   60 explist: error . SEMICOLON exp

    SEMICOLON  shift, and go to state 59
    RPAREN     shift, and go to state 60


State 21

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   57 explist: exp .
   58        | exp . SEMICOLON explist

    SEMICOLON  shift, and go to state 61
    OR         shift, and go to state 37
    AND        shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48

    $default  reduce using rule 57 (explist)


State 22

   50 exp: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 62


State 23

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp . THEN exp ELSE exp
   45    | IF exp . THEN exp

    THEN    shift, and go to state 63
    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 24

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp . DO exp

    DO      shift, and go to state 64
    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 25

   47 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 65


State 26

   21 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 66


State 27

   17 vardec: VAR . ID ASSIGN exp
   18       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 67


State 28

    9 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 68


State 29

   49 exp: LET decs . IN explist END

    IN  shift, and go to state 69


State 30

    2 decs: dec . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 3 (decs)

    decs     go to state 70
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


State 31

    4 dec: tydecs .

    $default  reduce using rule 4 (dec)


State 32

    7 tydecs: tydec .
    8       | tydec . tydecs

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 7 (tydecs)]
    $default  reduce using rule 7 (tydecs)

    tydecs  go to state 71
    tydec   go to state 32


State 33

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 34

    6 dec: fundecs .

    $default  reduce using rule 6 (dec)


State 35

   19 fundecs: fundec .
   20        | fundec . fundecs

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 19 (fundecs)]
    $default  reduce using rule 19 (fundecs)

    fundecs  go to state 72
    fundec   go to state 35


State 36

    0 $accept: program $end .

    $default  accept


State 37

   39 exp: exp OR . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 73
    lvalue   go to state 14
    funcall  go to state 15


State 38

   38 exp: exp AND . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    lvalue   go to state 14
    funcall  go to state 15


State 39

   34 exp: exp EQ . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    lvalue   go to state 14
    funcall  go to state 15


State 40

   35 exp: exp NEQ . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    lvalue   go to state 14
    funcall  go to state 15


State 41

   37 exp: exp LT . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    lvalue   go to state 14
    funcall  go to state 15


State 42

   33 exp: exp LE . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    lvalue   go to state 14
    funcall  go to state 15


State 43

   36 exp: exp GT . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    lvalue   go to state 14
    funcall  go to state 15


State 44

   32 exp: exp GE . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    lvalue   go to state 14
    funcall  go to state 15


State 45

   28 exp: exp PLUS . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 81
    lvalue   go to state 14
    funcall  go to state 15


State 46

   29 exp: exp MINUS . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 82
    lvalue   go to state 14
    funcall  go to state 15


State 47

   30 exp: exp TIMES . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 83
    lvalue   go to state 14
    funcall  go to state 15


State 48

   31 exp: exp DIVIDE . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    lvalue   go to state 14
    funcall  go to state 15


State 49

   54 lvalue: lvalue DOT . ID

    ID  shift, and go to state 85


State 50

   43 exp: lvalue ASSIGN . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 86
    lvalue   go to state 14
    funcall  go to state 15


State 51

   55 lvalue: lvalue LBRACK . exp RBRACK

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 87
    lvalue   go to state 14
    funcall  go to state 15


State 52

   61 funcall: ID LPAREN RPAREN .

    $default  reduce using rule 61 (funcall)


State 53

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   63 paramlist: exp .
   64          | exp . COMMA paramlist

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    COMMA   shift, and go to state 88

    $default  reduce using rule 63 (paramlist)


State 54

   62 funcall: ID LPAREN paramlist . RPAREN

    RPAREN  shift, and go to state 89


State 55

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   42    | ID LBRACK exp . RBRACK OF exp
   56 lvalue: ID LBRACK exp . RBRACK

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    RBRACK  shift, and go to state 90


State 56

   65 ass: ID . EQ exp
   66    | ID . EQ exp COMMA ass

    EQ  shift, and go to state 91


State 57

   40 exp: ID LBRACE RBRACE .

    $default  reduce using rule 40 (exp)


State 58

   41 exp: ID LBRACE ass . RBRACE

    RBRACE  shift, and go to state 92


State 59

   60 explist: error SEMICOLON . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 93
    lvalue   go to state 14
    funcall  go to state 15


State 60

   52 exp: LPAREN error RPAREN .

    $default  reduce using rule 52 (exp)


State 61

   58 explist: exp SEMICOLON . explist

    error   shift, and go to state 94
    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    RPAREN  reduce using rule 59 (explist)
    END     reduce using rule 59 (explist)

    exp      go to state 21
    lvalue   go to state 14
    explist  go to state 95
    funcall  go to state 15


State 62

   50 exp: LPAREN explist RPAREN .

    $default  reduce using rule 50 (exp)


State 63

   44 exp: IF exp THEN . exp ELSE exp
   45    | IF exp THEN . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 96
    lvalue   go to state 14
    funcall  go to state 15


State 64

   46 exp: WHILE exp DO . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 97
    lvalue   go to state 14
    funcall  go to state 15


State 65

   47 exp: FOR ID ASSIGN . exp TO exp DO exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 98
    lvalue   go to state 14
    funcall  go to state 15


State 66

   21 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


State 67

   17 vardec: VAR ID . ASSIGN exp
   18       | VAR ID . COLON ID ASSIGN exp

    ASSIGN  shift, and go to state 100
    COLON   shift, and go to state 101


State 68

    9 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 102


State 69

   49 exp: LET decs IN . explist END

    error   shift, and go to state 94
    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    END  reduce using rule 59 (explist)

    exp      go to state 21
    lvalue   go to state 14
    explist  go to state 103
    funcall  go to state 15


State 70

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


State 71

    8 tydecs: tydec tydecs .

    $default  reduce using rule 8 (tydecs)


State 72

   20 fundecs: fundec fundecs .

    $default  reduce using rule 20 (fundecs)


State 73

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   39    | exp OR exp .

    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 39 (exp)


State 74

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   38    | exp AND exp .
   39    | exp . OR exp

    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 38 (exp)


State 75

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   34    | exp EQ exp .
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (exp)


State 76

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   35    | exp NEQ exp .
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (exp)


State 77

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   37    | exp LT exp .
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (exp)


State 78

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   33    | exp LE exp .
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (exp)


State 79

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   36    | exp GT exp .
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (exp)


State 80

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   32    | exp GE exp .
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (exp)


State 81

   28 exp: exp . PLUS exp
   28    | exp PLUS exp .
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 28 (exp)


State 82

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   29    | exp MINUS exp .
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 29 (exp)


State 83

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   30    | exp TIMES exp .
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 30 (exp)


State 84

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   31    | exp DIVIDE exp .
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 31 (exp)


State 85

   54 lvalue: lvalue DOT ID .

    $default  reduce using rule 54 (lvalue)


State 86

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   43    | lvalue ASSIGN exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 43 (exp)


State 87

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   55 lvalue: lvalue LBRACK exp . RBRACK

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    RBRACK  shift, and go to state 104


State 88

   64 paramlist: exp COMMA . paramlist

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 53
    lvalue     go to state 14
    funcall    go to state 15
    paramlist  go to state 105


State 89

   62 funcall: ID LPAREN paramlist RPAREN .

    $default  reduce using rule 62 (funcall)


State 90

   42 exp: ID LBRACK exp RBRACK . OF exp
   56 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 106

    $default  reduce using rule 56 (lvalue)


State 91

   65 ass: ID EQ . exp
   66    | ID EQ . exp COMMA ass

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 107
    lvalue   go to state 14
    funcall  go to state 15


State 92

   41 exp: ID LBRACE ass RBRACE .

    $default  reduce using rule 41 (exp)


State 93

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   60 explist: error SEMICOLON exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 60 (explist)


State 94

   60 explist: error . SEMICOLON exp

    SEMICOLON  shift, and go to state 59


State 95

   58 explist: exp SEMICOLON explist .

    $default  reduce using rule 58 (explist)


State 96

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp . ELSE exp
   45    | IF exp THEN exp .

    ELSE    shift, and go to state 108
    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 45 (exp)


State 97

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp DO exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 46 (exp)


State 98

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp . TO exp DO exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    TO      shift, and go to state 109


State 99

   21 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   22       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 110

    $default  reduce using rule 16 (tyfields)

    tyfield   go to state 111
    tyfields  go to state 112


State 100

   17 vardec: VAR ID ASSIGN . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 113
    lvalue   go to state 14
    funcall  go to state 15


State 101

   18 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 114


State 102

    9 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 115
    LBRACE  shift, and go to state 116
    ARRAY   shift, and go to state 117

    ty  go to state 118


State 103

   49 exp: LET decs IN explist . END

    END  shift, and go to state 119


State 104

   55 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 55 (lvalue)


State 105

   64 paramlist: exp COMMA paramlist .

    $default  reduce using rule 64 (paramlist)


State 106

   42 exp: ID LBRACK exp RBRACK OF . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 120
    lvalue   go to state 14
    funcall  go to state 15


State 107

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   65 ass: ID EQ exp .
   66    | ID EQ exp . COMMA ass

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    COMMA   shift, and go to state 121

    $default  reduce using rule 65 (ass)


State 108

   44 exp: IF exp THEN exp ELSE . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 122
    lvalue   go to state 14
    funcall  go to state 15


State 109

   47 exp: FOR ID ASSIGN exp TO . exp DO exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 123
    lvalue   go to state 14
    funcall  go to state 15


State 110

   13 tyfield: ID . COLON ID

    COLON  shift, and go to state 124


State 111

   14 tyfields: tyfield .
   15         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 125

    $default  reduce using rule 14 (tyfields)


State 112

   21 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   22       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 126


State 113

   17 vardec: VAR ID ASSIGN exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 17 (vardec)


State 114

   18 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 127


State 115

   10 ty: ID .

    $default  reduce using rule 10 (ty)


State 116

   11 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 110

    $default  reduce using rule 16 (tyfields)

    tyfield   go to state 111
    tyfields  go to state 128


State 117

   12 ty: ARRAY . OF ID

    OF  shift, and go to state 129


State 118

    9 tydec: TYPE ID EQ ty .

    $default  reduce using rule 9 (tydec)


State 119

   49 exp: LET decs IN explist END .

    $default  reduce using rule 49 (exp)


State 120

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   42    | ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 42 (exp)


State 121

   66 ass: ID EQ exp COMMA . ass

    ID  shift, and go to state 56

    ass  go to state 130


State 122

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 44 (exp)


State 123

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 131
    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48


State 124

   13 tyfield: ID COLON . ID

    ID  shift, and go to state 132


State 125

   15 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 110

    $default  reduce using rule 16 (tyfields)

    tyfield   go to state 111
    tyfields  go to state 133


State 126

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   22       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    EQ     shift, and go to state 134
    COLON  shift, and go to state 135


State 127

   18 vardec: VAR ID COLON ID ASSIGN . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 136
    lvalue   go to state 14
    funcall  go to state 15


State 128

   11 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


State 129

   12 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 130

   66 ass: ID EQ exp COMMA ass .

    $default  reduce using rule 66 (ass)


State 131

   47 exp: FOR ID ASSIGN exp TO exp DO . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 139
    lvalue   go to state 14
    funcall  go to state 15


State 132

   13 tyfield: ID COLON ID .

    $default  reduce using rule 13 (tyfield)


State 133

   15 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 15 (tyfields)


State 134

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 140
    lvalue   go to state 14
    funcall  go to state 15


State 135

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 141


State 136

   18 vardec: VAR ID COLON ID ASSIGN exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 18 (vardec)


State 137

   11 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 11 (ty)


State 138

   12 ty: ARRAY OF ID .

    $default  reduce using rule 12 (ty)


State 139

   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 47 (exp)


State 140

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 21 (fundec)


State 141

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


State 142

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    MINUS   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 143
    lvalue   go to state 14
    funcall  go to state 15


State 143

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   28 exp: exp . PLUS exp
   29    | exp . MINUS exp
   30    | exp . TIMES exp
   31    | exp . DIVIDE exp
   32    | exp . GE exp
   33    | exp . LE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . GT exp
   37    | exp . LT exp
   38    | exp . AND exp
   39    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 22 (fundec)
